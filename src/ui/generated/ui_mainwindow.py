# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(837, 604)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(837, 604))
        MainWindow.setMaximumSize(QtCore.QSize(837, 604))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(13, 10, 811, 551))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_central = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_central.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetDefaultConstraint)
        self.horizontalLayout_central.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_central.setSpacing(20)
        self.horizontalLayout_central.setObjectName("horizontalLayout_central")
        self.verticalLayout_project = QtWidgets.QVBoxLayout()
        self.verticalLayout_project.setObjectName("verticalLayout_project")
        self.label_project = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_project.sizePolicy().hasHeightForWidth())
        self.label_project.setSizePolicy(sizePolicy)
        self.label_project.setObjectName("label_project")
        self.verticalLayout_project.addWidget(self.label_project)
        self.treeView_project = QtWidgets.QTreeView(parent=self.layoutWidget)
        self.treeView_project.setDragDropMode(QtWidgets.QAbstractItemView.DragDropMode.NoDragDrop)
        self.treeView_project.setHeaderHidden(True)
        self.treeView_project.setObjectName("treeView_project")
        self.verticalLayout_project.addWidget(self.treeView_project)
        self.verticalLayout_project.setStretch(0, 1)
        self.verticalLayout_project.setStretch(1, 20)
        self.horizontalLayout_central.addLayout(self.verticalLayout_project)
        self.verticalLayout_source = QtWidgets.QVBoxLayout()
        self.verticalLayout_source.setObjectName("verticalLayout_source")
        self.horizontalLayout_root = QtWidgets.QHBoxLayout()
        self.horizontalLayout_root.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetDefaultConstraint)
        self.horizontalLayout_root.setObjectName("horizontalLayout_root")
        self.pushButton_root = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_root.sizePolicy().hasHeightForWidth())
        self.pushButton_root.setSizePolicy(sizePolicy)
        self.pushButton_root.setObjectName("pushButton_root")
        self.horizontalLayout_root.addWidget(self.pushButton_root)
        self.lineEdit_root = QtWidgets.QLineEdit(parent=self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        self.lineEdit_root.setFont(font)
        self.lineEdit_root.setReadOnly(True)
        self.lineEdit_root.setObjectName("lineEdit_root")
        self.horizontalLayout_root.addWidget(self.lineEdit_root)
        self.verticalLayout_source.addLayout(self.horizontalLayout_root)
        self.label_source_code = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_source_code.sizePolicy().hasHeightForWidth())
        self.label_source_code.setSizePolicy(sizePolicy)
        self.label_source_code.setObjectName("label_source_code")
        self.verticalLayout_source.addWidget(self.label_source_code)
        self.plainTextEdit_source_code = QtWidgets.QPlainTextEdit(parent=self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        self.plainTextEdit_source_code.setFont(font)
        self.plainTextEdit_source_code.setLineWrapMode(QtWidgets.QPlainTextEdit.LineWrapMode.NoWrap)
        self.plainTextEdit_source_code.setReadOnly(True)
        self.plainTextEdit_source_code.setObjectName("plainTextEdit_source_code")
        self.verticalLayout_source.addWidget(self.plainTextEdit_source_code)
        self.verticalLayout_source.setStretch(0, 1)
        self.verticalLayout_source.setStretch(1, 1)
        self.verticalLayout_source.setStretch(2, 20)
        self.horizontalLayout_central.addLayout(self.verticalLayout_source)
        self.horizontalLayout_central.setStretch(0, 1)
        self.horizontalLayout_central.setStretch(1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 837, 22))
        self.menubar.setObjectName("menubar")
        self.menuHistory = QtWidgets.QMenu(parent=self.menubar)
        self.menuHistory.setObjectName("menuHistory")
        self.menuRefactor = QtWidgets.QMenu(parent=self.menubar)
        self.menuRefactor.setObjectName("menuRefactor")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_history = QtGui.QAction(parent=MainWindow)
        self.action_history.setObjectName("action_history")
        self.action_undo = QtGui.QAction(parent=MainWindow)
        self.action_undo.setObjectName("action_undo")
        self.action_rename = QtGui.QAction(parent=MainWindow)
        self.action_rename.setObjectName("action_rename")
        self.action_move = QtGui.QAction(parent=MainWindow)
        self.action_move.setObjectName("action_move")
        self.action_restructure = QtGui.QAction(parent=MainWindow)
        self.action_restructure.setObjectName("action_restructure")
        self.action_extract = QtGui.QAction(parent=MainWindow)
        self.action_extract.setObjectName("action_extract")
        self.actionin_line = QtGui.QAction(parent=MainWindow)
        self.actionin_line.setObjectName("actionin_line")
        self.action_usefunction = QtGui.QAction(parent=MainWindow)
        self.action_usefunction.setObjectName("action_usefunction")
        self.action_method_object = QtGui.QAction(parent=MainWindow)
        self.action_method_object.setObjectName("action_method_object")
        self.action_change_signature = QtGui.QAction(parent=MainWindow)
        self.action_change_signature.setObjectName("action_change_signature")
        self.action_introduce_factory = QtGui.QAction(parent=MainWindow)
        self.action_introduce_factory.setObjectName("action_introduce_factory")
        self.action_introduce_parameter = QtGui.QAction(parent=MainWindow)
        self.action_introduce_parameter.setObjectName("action_introduce_parameter")
        self.action_encapsulate_field = QtGui.QAction(parent=MainWindow)
        self.action_encapsulate_field.setObjectName("action_encapsulate_field")
        self.action_localtofield = QtGui.QAction(parent=MainWindow)
        self.action_localtofield.setObjectName("action_localtofield")
        self.action_topackage = QtGui.QAction(parent=MainWindow)
        self.action_topackage.setObjectName("action_topackage")
        self.action_importutils = QtGui.QAction(parent=MainWindow)
        self.action_importutils.setObjectName("action_importutils")
        self.menuHistory.addAction(self.action_undo)
        self.menuHistory.addAction(self.action_history)
        self.menuRefactor.addAction(self.action_rename)
        self.menuRefactor.addAction(self.action_move)
        self.menuRefactor.addAction(self.action_restructure)
        self.menuRefactor.addAction(self.action_extract)
        self.menuRefactor.addAction(self.actionin_line)
        self.menuRefactor.addAction(self.action_usefunction)
        self.menuRefactor.addAction(self.action_method_object)
        self.menuRefactor.addAction(self.action_change_signature)
        self.menuRefactor.addAction(self.action_introduce_factory)
        self.menuRefactor.addAction(self.action_introduce_parameter)
        self.menuRefactor.addAction(self.action_encapsulate_field)
        self.menuRefactor.addAction(self.action_localtofield)
        self.menuRefactor.addAction(self.action_topackage)
        self.menuRefactor.addAction(self.action_importutils)
        self.menubar.addAction(self.menuHistory.menuAction())
        self.menubar.addAction(self.menuRefactor.menuAction())

        self.retranslateUi(MainWindow)
        self.pushButton_root.clicked.connect(MainWindow.set_project) # type: ignore
        self.action_rename.triggered.connect(MainWindow.identifier_refactor) # type: ignore
        self.treeView_project.clicked['QModelIndex'].connect(MainWindow.show_source_code) # type: ignore
        self.action_move.triggered.connect(MainWindow.identifier_refactor) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PyProject Refactor"))
        self.label_project.setText(_translate("MainWindow", "Project Structure"))
        self.pushButton_root.setText(_translate("MainWindow", "Root Directory"))
        self.label_source_code.setText(_translate("MainWindow", "Module Source Code"))
        self.menuHistory.setTitle(_translate("MainWindow", "History"))
        self.menuRefactor.setTitle(_translate("MainWindow", "Refactor"))
        self.action_history.setText(_translate("MainWindow", "history"))
        self.action_undo.setText(_translate("MainWindow", "undo"))
        self.action_rename.setText(_translate("MainWindow", "rename"))
        self.action_rename.setToolTip(_translate("MainWindow", "Rename something in the project."))
        self.action_move.setText(_translate("MainWindow", "move"))
        self.action_move.setToolTip(_translate("MainWindow", "Move a python element in the project."))
        self.action_restructure.setText(_translate("MainWindow", "restructure"))
        self.action_restructure.setToolTip(_translate("MainWindow", "Restructure code."))
        self.action_extract.setText(_translate("MainWindow", "extract"))
        self.action_extract.setToolTip(_translate("MainWindow", "Extract methods/variables."))
        self.actionin_line.setText(_translate("MainWindow", "inline"))
        self.actionin_line.setToolTip(_translate("MainWindow", "Inline occurrences of a method/variable/parameter."))
        self.action_usefunction.setText(_translate("MainWindow", "usefunction"))
        self.action_usefunction.setToolTip(_translate("MainWindow", "Try to use a function wherever possible."))
        self.action_method_object.setText(_translate("MainWindow", "method_object"))
        self.action_method_object.setToolTip(_translate("MainWindow", "Transform a function or a method to a method object."))
        self.action_change_signature.setText(_translate("MainWindow", "change_signature"))
        self.action_change_signature.setToolTip(_translate("MainWindow", "Change the signature of a function/method."))
        self.action_introduce_factory.setText(_translate("MainWindow", "introduce_factory"))
        self.action_introduce_factory.setToolTip(_translate("MainWindow", "Introduce a factory for a class and changes all constructors to use it."))
        self.action_introduce_parameter.setText(_translate("MainWindow", "introduce_parameter"))
        self.action_introduce_parameter.setToolTip(_translate("MainWindow", "Introduce a parameter in a function."))
        self.action_encapsulate_field.setText(_translate("MainWindow", "encapsulate_field"))
        self.action_encapsulate_field.setToolTip(_translate("MainWindow", "Generate a getter/setter for a field and changes its occurrences to use them."))
        self.action_localtofield.setText(_translate("MainWindow", "localtofield"))
        self.action_localtofield.setToolTip(_translate("MainWindow", "Change a local variable to field."))
        self.action_topackage.setText(_translate("MainWindow", "topackage"))
        self.action_topackage.setToolTip(_translate("MainWindow", "Transform a module to a package with the same name."))
        self.action_importutils.setText(_translate("MainWindow", "importutils"))
        self.action_importutils.setToolTip(_translate("MainWindow", "Perform actions like organize imports."))
